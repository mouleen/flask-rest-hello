@app.route('/favorite/<int:id>', methods=['GET'])
# Obtener personaje por ID
def handle_get_favorite(id):
    try:
        favorite=Favorite.query.get(id)
    except Exception as e:
        # Logear algo aca
        return jsonify({"msg":"Excepcion buscando el Favorito"}),500
    #finally: # Corre siempre
    else:
        if favorite is None: 
            return jsonify({"msg":"No se encontro el Favorito"}),404
        serialized_favorite=favorite.serialize()
        return serialized_favorite,200

@app.route('/favorite/<int:id>',methods=['DELETE'])
# Eliminar personaje por ID
def handle_delete_favorite(id):
    try:
        favorite=Favorite.query.get(id)
    except Exception as e:
        # Logear algo aca
        return jsonify({"msg":"Excepcion buscando el Favorito"}),500
    #finally: # Corre siempre
    else:
        if favorite is None: 
            return jsonify({"msg":"No se encontro el Favorito"}),404
        try:
            db.session.delete(favorite)
            db.session.commit()
        except Exception as e:
            # Logear algo aca
            return jsonify({"msg":"Excepcion borrando el Favorito"}),500
        else:
            return jsonify({"msg":"Favorito eliminado con exito"}),200
